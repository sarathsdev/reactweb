{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SARATH S\\\\Desktop\\\\test\\\\daytwo\\\\src\\\\Test5.js\";\nimport React from 'react';\nimport { people } from './data.js';\nimport { getImageUrl } from './utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test5() {\n  const listItems = people.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: getImageUrl(person),\n      alt: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), ' ' + person.profession + ' ', \"known for \", person.accomplishment]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)]\n  }, person.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Test5;\nvar _c;\n$RefreshReg$(_c, \"Test5\");","map":{"version":3,"names":["React","people","getImageUrl","jsxDEV","_jsxDEV","Test5","listItems","map","person","children","src","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","profession","accomplishment","id","_c","$RefreshReg$"],"sources":["C:/Users/SARATH S/Desktop/test/daytwo/src/Test5.js"],"sourcesContent":["import React from 'react'\r\nimport { people } from './data.js';\r\nimport { getImageUrl } from './utils.js';\r\n\r\nexport default function Test5() {\r\n\r\n    const listItems = people.map(person =>\r\n        <li key={person.id}>\r\n          <img\r\n            src={getImageUrl(person)}\r\n            alt={person.name}\r\n          />\r\n          <p>\r\n            <b>{person.name}</b>\r\n              {' ' + person.profession + ' '}\r\n              known for {person.accomplishment}\r\n          </p>\r\n        </li>\r\n      );\r\n\r\n  return (\r\n    <div>\r\n      <ul>{listItems}</ul>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,WAAW,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAE5B,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAG,CAACC,MAAM,iBAC/BJ,OAAA;IAAAK,QAAA,gBACEL,OAAA;MACEM,GAAG,EAAER,WAAW,CAACM,MAAM,CAAE;MACzBG,GAAG,EAAEH,MAAM,CAACI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFZ,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,EAAID,MAAM,CAACI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjB,GAAG,GAAGR,MAAM,CAACS,UAAU,GAAG,GAAG,EAAC,YACrB,EAACT,MAAM,CAACU,cAAc;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA,GATGR,MAAM,CAACW,EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUd,CACN,CAAC;EAEL,oBACEZ,OAAA;IAAAK,QAAA,eACEL,OAAA;MAAAK,QAAA,EAAKH;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACI,EAAA,GArBuBf,KAAK;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}