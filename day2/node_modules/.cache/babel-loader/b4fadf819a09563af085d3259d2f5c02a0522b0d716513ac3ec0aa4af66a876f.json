{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SARATH S\\\\Desktop\\\\test\\\\daytwo\\\\src\\\\Test2.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext } from \"react\";\n\n// Step 1: Create a Context with a default value (\"light\")\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(\"light\");\nexport default function App() {\n  return (\n    /*#__PURE__*/\n    // Step 2: Provide a value (\"dark\") to the Context\n    _jsxDEV(ThemeContext.Provider, {\n      value: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(ChildComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nfunction ChildComponent() {\n  _s();\n  // Step 3: Consume the context value using useContext\n  const theme = useContext(ThemeContext);\n\n  // Step 4: Apply the theme dynamically\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: theme === \"dark\" ? \"#333\" : \"#fff\",\n      color: theme === \"dark\" ? \"#fff\" : \"#000\",\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Theme: \", theme]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n//-------------------------------------------------------------------------------\n// The Context API allows data to be shared across components without prop drilling.\n//ðŸ”¹ What is Prop Drilling?\n// Prop Drilling happens when data (props) needs to be passed through multiple components just to reach a deeply nested component.\n\n// Imagine we have a theme (\"dark\") stored in the App component,\n// but a deeply nested Button component needs access to it.\n\n// import React from \"react\";\n\n// export default function App() {\n//   const theme = \"dark\"; // Theme is in App component\n\n//   return <Parent theme={theme} />;\n// }\n\n// function Parent({ theme }) {\n//   return <Child theme={theme} />;\n// }\n\n// function Child({ theme }) {\n//   return <Button theme={theme} />;\n// }\n\n// function Button({ theme }) {\n//   return (\n//     <button style={{ background: theme === \"dark\" ? \"#333\" : \"#fff\", color: theme === \"dark\" ? \"#fff\" : \"#000\" }}>\n//       Themed Button\n//     </button>\n//   );\n// }\n_s(ChildComponent, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n_c2 = ChildComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ChildComponent\");","map":{"version":3,"names":["React","createContext","useContext","jsxDEV","_jsxDEV","ThemeContext","App","Provider","value","children","ChildComponent","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","theme","style","backgroundColor","color","padding","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/SARATH S/Desktop/test/daytwo/src/Test2.js"],"sourcesContent":["import React, { createContext, useContext } from \"react\";\r\n\r\n// Step 1: Create a Context with a default value (\"light\")\r\nconst ThemeContext = createContext(\"light\");\r\n\r\nexport default function App() {\r\n  return (\r\n    // Step 2: Provide a value (\"dark\") to the Context\r\n    <ThemeContext.Provider value=\"dark\">\r\n      <ChildComponent />\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nfunction ChildComponent() {\r\n  // Step 3: Consume the context value using useContext\r\n  const theme = useContext(ThemeContext);\r\n\r\n  // Step 4: Apply the theme dynamically\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: theme === \"dark\" ? \"#333\" : \"#fff\",\r\n        color: theme === \"dark\" ? \"#fff\" : \"#000\",\r\n        padding: \"20px\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <h2>Current Theme: {theme}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\n//-------------------------------------------------------------------------------\r\n// The Context API allows data to be shared across components without prop drilling.\r\n//ðŸ”¹ What is Prop Drilling?\r\n// Prop Drilling happens when data (props) needs to be passed through multiple components just to reach a deeply nested component.\r\n\r\n// Imagine we have a theme (\"dark\") stored in the App component,\r\n// but a deeply nested Button component needs access to it.\r\n\r\n// import React from \"react\";\r\n\r\n// export default function App() {\r\n//   const theme = \"dark\"; // Theme is in App component\r\n\r\n//   return <Parent theme={theme} />;\r\n// }\r\n\r\n// function Parent({ theme }) {\r\n//   return <Child theme={theme} />;\r\n// }\r\n\r\n// function Child({ theme }) {\r\n//   return <Button theme={theme} />;\r\n// }\r\n\r\n// function Button({ theme }) {\r\n//   return (\r\n//     <button style={{ background: theme === \"dark\" ? \"#333\" : \"#fff\", color: theme === \"dark\" ? \"#fff\" : \"#000\" }}>\r\n//       Themed Button\r\n//     </button>\r\n//   );\r\n// }\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,OAAO,CAAC;AAE3C,eAAe,SAASK,GAAGA,CAAA,EAAG;EAC5B;IAAA;IACE;IACAF,OAAA,CAACC,YAAY,CAACE,QAAQ;MAACC,KAAK,EAAC,MAAM;MAAAC,QAAA,eACjCL,OAAA,CAACM,cAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;AAE5B;AAACC,EAAA,GAPuBT,GAAG;AAS3B,SAASI,cAAcA,CAAA,EAAG;EAAAM,EAAA;EACxB;EACA,MAAMC,KAAK,GAAGf,UAAU,CAACG,YAAY,CAAC;;EAEtC;EACA,oBACED,OAAA;IACEc,KAAK,EAAE;MACLC,eAAe,EAAEF,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;MACnDG,KAAK,EAAEH,KAAK,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM;MACzCI,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE;IACb,CAAE;IAAAb,QAAA,eAEFL,OAAA;MAAAK,QAAA,GAAI,iBAAe,EAACQ,KAAK;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,CAjDSN,cAAc;AAAAa,GAAA,GAAdb,cAAc;AAAA,IAAAK,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}